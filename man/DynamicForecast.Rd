% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynamicForecast.R
\name{DynamicForecast}
\alias{DynamicForecast}
\title{Dynamic Forecast of Five Models and their Ensembles}
\arguments{
\item{Data}{A two column (Date, Case) dataset for the estimation. The date must be in format recognized by R i.e. 'YYYY-MM-DD'. If the data is monthly series, the recognized date format is the last day of the maximum month of the dataset e.g. 2021-02-28. If the data is a yearly series, the recognized date format is the last day of the maximum year of the dataset e.g. 2020-12-31. Quarterly data is not available.}

\item{BREAKS}{A vector of numbers indicating points of breaks for estimation of the spline models.}

\item{MaximumDate}{The date indicating the maximum date (last date) in the data frame, meaning that forecasting starts the next date following it. The date must be a recognized date format. Note that for forecasting, the date origin is set to 1970-01-01.}

\item{Trend}{The type of trend. There are three options \strong{Day, Month and Year}.}
}
\value{
A list with the following components:
\item{\code{Spline without knots}}{The estimated spline model without the breaks (knots).}
\item{\code{Spline with knots}}{The estimated spline model without the breaks (knots).}
\item{\code{Smooth Spline}}{The smooth spline estimates.}
\item{\code{ARIMA}}{Estimated Auto Regressive Integrated Moving Average model.}
\item{\code{Quadratic}}{The estimated quadratic polynomial model.}
\item{\code{Ensembled with equal weight}}{Estimated Ensemble model with equal weight given to each of the models. To get this, the fitted values of each of the models is divided by the number of models and summed together.}
\item{\code{Ensembled based on weight}}{Estimated Ensemble model based on weight of each model. To do this, the fitted values of each model served as independent variable and regressed against the trend with interaction among the variables.}
\item{\code{Ensembled based on summed weight}}{Estimated Ensemble model based on summed weight of each model. To do this, the fitted values of each model served as independent variable and is regressed agaisnt the trend.}
\item{\code{Ensembled based on weight of fit}}{Estimated Ensemble model. The fit of each model is measured by the rmse.}
\item{\code{Forecast}}{The forecast is equivalent to the length of the dataset (equal days forecast).}
\item{\code{RMSE}}{Root Mean Square Error (rmse) for each forecast.}
\item{\code{Plot}}{The combined plots of the forecasts using ggplot. }
\item{\code{Date}}{This is the date range for the forecast.}
}
\description{
Dynamic Forecast of Five Models and their Ensembles
}
\section{Quasiquotation}{


The \code{DynamicForecast()} estimates and predict models using time series dataset and provide subset forecasts within the length of trend. The recognized models are lm, smooth spline, polynomial splines with or without knots, quadratic polynomial,  and ARIMA. The robust output include the models' estimates, time-varying forecasts and plots  based on themes from ggplot. The main attraction of this package is the use of the newly introduced \emph{equal number days (time, trend) forecast}
}

\examples{
library(Dyn4cast)
Data$Date <- as.Date(Data$Date, format = '\%m/\%d/\%Y') # The date is reformatted
Dss <- seq(Data$Date[1], by = "day", length.out = length(Data$Case)) #data length for forecast
lastdayfo21 <- Dss[length(Dss)] # The maximum length
Data <- Data[Data$Date <= lastdayfo21 - 28, ] # desired length of forecast
BREAKS <- c(70, 131, 173, 228, 274) # The default breaks for the data
DynamicForecast(Data = Data, BREAKS = BREAKS, MaximumDate = "2021-02-10", Trend = "Day")

Data$Date <- as.Date(Data$Date, format = '\%m/\%d/\%Y')
Dss <- seq(Data$Date[1], by = "day", length.out = length(Data$Case))
lastdayfo21 <- Dss[length(Dss)]
Data <- Data[Data$Date <= lastdayfo21 - 14, ]
BREAKS = c(70, 131, 173, 228, 274)
DynamicForecast(Data = Data, BREAKS = BREAKS , MaximumDate = "2021-02-10", Trend = "Day")

}
